local a=module('_core','libs/Tunnel')local b=module('_core','libs/Proxy')APICKF=b.getInterface('API')cAPI=a.getInterface('cAPI')hpp={}a.bindInterface("hpp_criminalrecord",hpp)API_Database={}local c=exports['GHMattiMySQL']Citizen.CreateThread(function()while true do Citizen.Wait(5*60*1000)collectgarbage("count")collectgarbage("collect")end end)DBConnect={driver='ghmattimysql',host='127.0.0.1',database='ckf2',user='root',password=''}local d={}local e;local f={}local g={}local h={}local i=false;function API_Database.registerDBDriver(j,k,l,m)if not d[j]then d[j]={k,l,m}if j==DBConnect.driver then e=d[j]local n=k(DBConnect)if n then i=true;for o,p in pairs(f)do l(table.unpack(p,1,table.maxn(p)))end;for o,q in pairs(g)do async(function()q[2](m(table.unpack(q[1],1,table.maxn(q[1]))))end)end;f=nil;g=nil else error('Conexão com o banco de dados perdida.')end end else error('Banco de dados registrado.')end end;function API_Database.format(r)local s,t,u=string.match(r,'^([^%d]*%d)(%d*)(.-)$')return s..t:reverse():gsub('(%d%d%d)','%1.'):reverse()..u end;function API_Database.prepare(j,q)h[j]=true;if i then e[2](j,q)else table.insert(f,{j,q})end end;function API_Database.query(j,v,w)if not h[j]then error('query '..j.." doesn't exist.")end;if not w then w='query'end;if i then return e[3](j,v or{},w)else local x=async()table.insert(g,{{j,v or{},w},x})return x:wait()end end;function API_Database.execute(j,v)return API_Database.query(j,v,'execute')end;local y={}local function k(z)return c~=nil end;local function l(j,q)y[j]=q end;local function m(j,v,w)local q=y[j]local A={}A._=true;for B,C in pairs(v)do A['@'..B]=C end;local x=async()if w=='execute'then c:QueryAsync(q,A,function(D)x(D or 0)end)elseif w=='scalar'then c:QueryScalarAsync(q,A,function(E)x(E)end)else c:QueryResultAsync(q,A,function(F)x(F,#F)end)end;return x:wait()end;Citizen.CreateThread(function()c:Query('SELECT 1')API_Database.registerDBDriver('ghmattimysql',k,l,m)end)API_Database.prepare("CKF_/GetCriminalRecordByCharId","SELECT * FROM criminal_records WHERE charid = @charid")API_Database.prepare("CKF_/GetCharIdInfo","SELECT * FROM characters WHERE charid = @charid")API_Database.prepare("CKF_/CreateCriminalRecord","INSERT INTO criminal_records (charid, criminal_record, register_by) VALUES (@charid, @criminal_record, @register_by)")API_Database.prepare("CKF_/GetCriminalRecordById","SELECT * FROM criminal_records WHERE ID = @ID")API_Database.prepare("CKF_/DeleteCriminalRecord","DELETE FROM criminal_records WHERE ID = @ID")API_Database.prepare("CKF_/GetBillValue","SELECT * FROM police_bills WHERE charid = @charid")API_Database.prepare("CKF_/InsertBillValue","INSERT INTO police_bills (charid, bill_value) VALUES (@charid, @bill_value)")API_Database.prepare("CKF_/UpdateBillValue","UPDATE police_bills SET bill_value = @bill_value WHERE charid = @charid")RegisterNetEvent("hoppe:criminal:record:show:menu")AddEventHandler("hoppe:criminal:record:show:menu",function(G)local H=source;local I=APICKF.getUserFromSource(H)if I then local J=I:getCharacter()if J then if not J:hasGroup("pmesp")then return TriggerClientEvent("Notify",H,"negado","Você não tem permissão!")end;local K=J.id;local K=G;local L=API_Database.query("CKF_/GetCharIdInfo",{charid=K})local M=API_Database.query("CKF_/GetCriminalRecordByCharId",{charid=K})local N=API_Database.query("CKF_/GetBillValue",{charid=G})if#N>0 then N=N[1].bill_value else N=0 end;TriggerClientEvent("hoppe:criminal:record:show:menu",H,{charinfo=L,criminal_records=M,bill_value=N})end end end)RegisterNetEvent("hoppe:add:bill:value")AddEventHandler("hoppe:add:bill:value",function(O,G)local F=API_Database.query("CKF_/GetBillValue",{charid=tonumber(G)})if#F>0 then local P=F[1].bill_value;local Q=P+tonumber(O)API_Database.query("CKF_/UpdateBillValue",{bill_value=Q,charid=G})else API_Database.query("CKF_/InsertBillValue",{charid=tonumber(G),bill_value=tonumber(O)})end end)RegisterNetEvent("hoppe:add:criminal:record")AddEventHandler("hoppe:add:criminal:record",function(G,R)local H=source;local I=APICKF.getUserFromSource(H)if I then local J=I:getCharacter()if J then if not J:hasGroup("pmesp")then return TriggerClientEvent("Notify",H,"negado","Você não tem permissão!")end;local K=J.id;local S=G;local L=API_Database.query("CKF_/GetCharIdInfo",{charid=S})local M=API_Database.query("CKF_/GetCriminalRecordByCharId",{charid=S})API_Database.query("CKF_/CreateCriminalRecord",{charid=S,criminal_record=R,register_by=J.charName})TriggerClientEvent("Notify",H,"sucesso","Ficha adicionada com sucesso!")end end end)RegisterNetEvent("hoppe:rem:criminal:record")AddEventHandler("hoppe:rem:criminal:record",function(T)local H=source;local I=APICKF.getUserFromSource(H)if I then local J=I:getCharacter()if J then if not J:hasGroup("pmesp")then return TriggerClientEvent("Notify",H,"negado","Você não tem permissão!")end;local K=J.id;local F=API_Database.query("CKF_/GetCriminalRecordById",{ID=parseInt(T)})if#F>0 then API_Database.query("CKF_/DeleteCriminalRecord",{ID=parseInt(T)})return TriggerClientEvent("Notify",H,"sucesso","Essa ficha foi deletada!")else return TriggerClientEvent("Notify",H,"negado","Essa ficha não existe!")end end end end)