local a=module('_core','libs/Tunnel')local b=module('_core','libs/Proxy')APICKF=b.getInterface('API')cAPI=a.getInterface('cAPI')hpp={}a.bindInterface("hpp_preset",hpp)local c=a.getInterface("hpp_preset")Citizen.CreateThread(function()while true do Citizen.Wait(5*60*1000)collectgarbage("count")collectgarbage("collect")end end)API_Database={}local d=exports['GHMattiMySQL']local e=module("_core","config/Permissions")DBConnect={driver='ghmattimysql',host='127.0.0.1',database='ckf2',user='root',password=''}local f={}local g;local h={}local i={}local j={}local k=false;function API_Database.registerDBDriver(l,m,n,o)if not f[l]then f[l]={m,n,o}if l==DBConnect.driver then g=f[l]local p=m(DBConnect)if p then k=true;for q,r in pairs(h)do n(table.unpack(r,1,table.maxn(r)))end;for q,s in pairs(i)do async(function()s[2](o(table.unpack(s[1],1,table.maxn(s[1]))))end)end;h=nil;i=nil else error('Conexão com o banco de dados perdida.')end end else error('Banco de dados registrado.')end end;function API_Database.format(t)local u,v,w=string.match(t,'^([^%d]*%d)(%d*)(.-)$')return u..v:reverse():gsub('(%d%d%d)','%1.'):reverse()..w end;function API_Database.prepare(l,s)j[l]=true;if k then g[2](l,s)else table.insert(h,{l,s})end end;function API_Database.query(l,x,y)if not j[l]then error('query '..l.." doesn't exist.")end;if not y then y='query'end;if k then return g[3](l,x or{},y)else local z=async()table.insert(i,{{l,x or{},y},z})return z:wait()end end;function API_Database.execute(l,x)return API_Database.query(l,x,'execute')end;local A={}local function m(B)return d~=nil end;local function n(l,s)A[l]=s end;local function o(l,x,y)local s=A[l]local C={}C._=true;for D,E in pairs(x)do C['@'..D]=E end;local z=async()if y=='execute'then d:QueryAsync(s,C,function(F)z(F or 0)end)elseif y=='scalar'then d:QueryScalarAsync(s,C,function(G)z(G)end)else d:QueryResultAsync(s,C,function(H)z(H,#H)end)end;return z:wait()end;Citizen.CreateThread(function()d:Query('SELECT 1')API_Database.registerDBDriver('ghmattimysql',m,n,o)end)API_Database.prepare('CKF_/getGroupCharID','SELECT * FROM characters WHERE charid = @charid')local I={["1"]={["perm"]="policePerm",[1885233650]={[1]={121,0},[5]={-1,0},[7]={1,0},[3]={0,0},[4]={47,0},[8]={55,0,1},[6]={25,0,1},[11]={93,0},[9]={7,0,1},[10]={-1,0},["p0"]={96,0},["p1"]={-1,0},["p2"]={-1,0},["p6"]={-1,0},["p7"]={-1,0}},[-1667301416]={[1]={121,0},[5]={-1,0},[7]={95,0},[3]={14,0},[4]={49,0},[8]={34,0},[6]={25,0,1},[11]={84,0},[9]={-1,0},[10]={-1,0},["p0"]={95,0},["p1"]={-1,0},["p2"]={-1,0},["p6"]={-1,0},["p7"]={-1,0}}},["2"]={["perm"]="policePerm",[1885233650]={[1]={121,0},[5]={-1,0},[7]={1,0},[3]={0,0},[4]={14,1,1},[8]={15,0},[6]={25,0,1},[11]={93,0},[9]={7,0,1},[10]={-1,0},["p0"]={96,0},["p1"]={-1,0},["p2"]={-1,0},["p6"]={-1,0},["p7"]={-1,0}},[-1667301416]={[1]={-1,0},[5]={-1,0},[7]={0,0},[3]={49,0},[4]={32,0},[8]={15,0},[6]={25,0,1},[11]={43,0},[9]={0,0},[10]={-1,0},["p0"]={5,1,0},["p1"]={7,1},["p2"]={-1,0},["p6"]={-1,0},["p7"]={-1,0}}},["3"]={["perm"]="policePerm",[1885233650]={[1]={121,0},[5]={-1,0},[7]={1,0},[3]={52,0,1},[4]={31,0,1},[8]={55,0,1},[6]={25,0},[11]={93,0},[9]={7,0,1},[10]={-1,0},["p0"]={96,0},["p1"]={-1,0},["p2"]={-1,0},["p6"]={-1,0},["p7"]={-1,0}},[-1667301416]={[1]={-1,0},[5]={-1,0},[7]={0,0},[3]={49,0},[4]={32,0},[8]={15,0},[6]={25,0,1},[11]={43,0},[9]={0,0},[10]={-1,0},["p0"]={5,1,0},["p1"]={7,1},["p2"]={-1,0},["p6"]={-1,0},["p7"]={-1,0}}},["4"]={["perm"]="medicPerm",[1885233650]={[3]={74,0},[4]={20,0},[6]={7,0},[7]={126,0},[8]={57,2},[9]={0,0},[11]={242,2}},[-1667301416]={[3]={96,0},[4]={23,0},[6]={7,1},[7]={96,0},[8]={73,0},[9]={-1,0},[11]={73,0}}},["mecanico"]={["perm"]="mechPerm",[1885233650]={[3]={41,0},[4]={39,0},[6]={82,0},[7]={0,0},[8]={89,0,1},[9]={0,0},[11]={0,2,1}},[-1667301416]={[3]={31,0},[4]={38,0},[6]={24,0},[7]={-1,0},[8]={15,0},[9]={-1,0},[11]={56,0}}},["cet"]={[1885233650]={[3]={30,0,1},[4]={36,12,1},[6]={12,0,1},[7]={0,0,1},[8]={0,2,1},[9]={0,0,2},[11]={212,0,1}}}}local J={}RegisterCommand('preset',function(source,K,L)local M=source;local N=APICKF.getUserFromSource(M)local O=N:getCharacter()if K[1]then local P=O.id;local H=API_Database.query('CKF_/getGroupCharID',{charid=P})local Q=json.decode(H[1].groups)local R=false;if I[tostring(K[1])].perm then for D,E in pairs(Q)do for S,T in pairs(e)do if D==S then if T.inheritance==I[tostring(K[1])].perm then R=true end end end end else R=true end;if R then local U=I[tostring(K[1])]if U then if not J[O.id]then local V=c.getCustomization(M)J[O.id]=V;local W=J[O.id]end;local model_hash=parseInt(O:getModel())TriggerClientEvent("hoppe:preset:updateClothes",source,U[model_hash],"cloackroom",model_hash)end else TriggerClientEvent("Notify",source,"negado","Você não tem permissão!")end else if J[O.id]then local W=J[O.id]TriggerClientEvent("hoppe:preset:updateClothes",source,W,"remove",model_hash)J[O.id]=nil end end end)API_Database.prepare("CKF_/SaveOutfit","CALL setData(@target, @key, @value, @charid)")API_Database.prepare("CKF_/RemoveOutfit","CALL remData(@target, @key, @charid)")API_Database.prepare("CKF_/GetOutfit","SELECT * FROM outfits WHERE charid = @charid")API_Database.prepare("CKF_/CreateLine","INSERT INTO outfits (charid) VALUES (@charid)")local X=a.getInterface("hpp_houses")RegisterCommand("outfit",function(source,K,L)local M=source;local N=APICKF.getUserFromSource(M)local Y=X.isInHouse(M)if not Y then return TriggerClientEvent("Notify",M,"negado","Você deve estar dentro de sua casa!")end;if N then local O=N:getCharacter()if O then if K[1]then if K[1]=="save"then local U=c.getCustomization(M)if K[2]then local Z=K[2]local _=json.encode(U)local P=parseInt(O.id)local H=API_Database.query("CKF_/GetOutfit",{charid=P})if#H>0 then API_Database.query("CKF_/SaveOutfit",{target='outfit',key=Z,value=_,charid=P})return TriggerClientEvent("Notify",M,"sucesso","Outfit "..K[2].." salvo com sucesso!")else for D,E in pairs(H)do if D==K[2]then return TriggerClientEvent("Notify",M,"negado","Já existe um outfit com esse nome!")end end;API_Database.query("CKF_/CreateLine",{charid=P})Citizen.Wait(500)API_Database.query("CKF_/SaveOutfit",{target='outfit',key=Z,value=_,charid=P})return TriggerClientEvent("Notify",M,"sucesso","Outfit "..K[2].." salvo com sucesso!")end else return TriggerClientEvent("Notify",M,"negado","Você precisa fornecer um nome para seu outfit")end elseif K[1]=="apply"then local P=parseInt(O.id)local H=API_Database.query("CKF_/GetOutfit",{charid=P})if#H>0 then local a0=json.decode(H[1].outfits)local a1;for D,E in pairs(a0)do if D==K[2]then a1=json.decode(E)end end;if a1 then local model_hash=parseInt(O:getModel())TriggerClientEvent("hoppe:preset:updateClothes",M,a1,"cloackroom",model_hash)else return TriggerClientEvent("Notify",M,"negado","Outfit inválido!")end end elseif K[1]=="rem"then local P=parseInt(O.id)local Z=K[2]API_Database.query("CKF_/RemoveOutfit",{target='outfit',key=Z,charid=P})return TriggerClientEvent("Notify",M,"sucesso","Outfit "..K[2].." removido!")end end end end end)function hpp.isHaveClothes()local M=source;local N=APICKF.getUserFromSource(M)if N then local O=N:getCharacter()if O then local P=O.id;return O:getItemAmount("clothes")end end end;function hpp.isVip100()local M=source;local N=APICKF.getUserFromSource(M)if N then local O=N:getCharacter()if O then local P=O.id;local H=API_Database.query('CKF_/getGroupCharID',{charid=P})if H[1].vip=="vip100"then return true else return false end end end end;function hpp.tryClothes(a2)local M=source;local N=APICKF.getUserFromSource(M)if N then local O=N:getCharacter()if O then local P=O.id;return O:removeItem("clothes",tonumber(a2))end end end;function hpp.removeHat(a3)local M=source;local N=APICKF.getUserFromSource(M)if N then local O=N:getCharacter()if O then if not O:hasGroup("pmesp")then return end;TriggerClientEvent("hoppe:remHat",tonumber(a3))end end end;function hpp.removeMask(a3)local M=source;local N=APICKF.getUserFromSource(M)if N then local O=N:getCharacter()if O then if not O:hasGroup("pmesp")then return end;TriggerClientEvent("hoppe:remMask",tonumber(a3))end end end