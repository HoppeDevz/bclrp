local a=module('_core','libs/Tunnel')local b=module('_core','libs/Proxy')APICKF=b.getInterface('API')cAPI=a.getInterface('cAPI')hpp={}a.bindInterface("hpp_tattoos",hpp)Citizen.CreateThread(function()while true do Citizen.Wait(5*60*1000)collectgarbage("count")collectgarbage("collect")end end)API_Database={}local c=exports['GHMattiMySQL']local d=module("_core","config/Permissions")DBConnect={driver='ghmattimysql',host='127.0.0.1',database='ckf2',user='root',password=''}local e={}local f;local g={}local h={}local i={}local j=false;function API_Database.registerDBDriver(k,l,m,n)if not e[k]then e[k]={l,m,n}if k==DBConnect.driver then f=e[k]local o=l(DBConnect)if o then j=true;for p,q in pairs(g)do m(table.unpack(q,1,table.maxn(q)))end;for p,r in pairs(h)do async(function()r[2](n(table.unpack(r[1],1,table.maxn(r[1]))))end)end;g=nil;h=nil else error('ConexÃ£o com o banco de dados perdida.')end end else error('Banco de dados registrado.')end end;function API_Database.format(s)local t,u,v=string.match(s,'^([^%d]*%d)(%d*)(.-)$')return t..u:reverse():gsub('(%d%d%d)','%1.'):reverse()..v end;function API_Database.prepare(k,r)i[k]=true;if j then f[2](k,r)else table.insert(g,{k,r})end end;function API_Database.query(k,w,x)if not i[k]then error('query '..k.." doesn't exist.")end;if not x then x='query'end;if j then return f[3](k,w or{},x)else local y=async()table.insert(h,{{k,w or{},x},y})return y:wait()end end;function API_Database.execute(k,w)return API_Database.query(k,w,'execute')end;local z={}local function l(A)return c~=nil end;local function m(k,r)z[k]=r end;local function n(k,w,x)local r=z[k]local B={}B._=true;for C,D in pairs(w)do B['@'..C]=D end;local y=async()if x=='execute'then c:QueryAsync(r,B,function(E)y(E or 0)end)elseif x=='scalar'then c:QueryScalarAsync(r,B,function(F)y(F)end)else c:QueryResultAsync(r,B,function(G)y(G,#G)end)end;return y:wait()end;Citizen.CreateThread(function()c:Query('SELECT 1')API_Database.registerDBDriver('ghmattimysql',l,m,n)end)API_Database.prepare("CKF_/CreateColumn","INSERT INTO tattoos (charid) VALUES(@charid)")API_Database.prepare("CKF_/GetPlayerTattoos","SELECT * FROM tattoos WHERE charid = @charid")API_Database.prepare("CKF_/ResetTattoos","UPDATE tattoos SET tattoos = '{}' WHERE charid = @charid")API_Database.prepare("CKF_/SaveTattooData","CALL setData(@target, @key, @value, @charid)")function hpp.saveTattoo(H,I,J)local K=source;local L=APICKF.getUserFromSource(K)if L then local M=L:getCharacter()if M then local N=M.id;local G=API_Database.query("CKF_/GetPlayerTattoos",{charid=N})if#G>0 then local O=json.encode({I,J})API_Database.query("CKF_/SaveTattooData",{target='tattoo',key=H,value=O,charid=N})else API_Database.query("CKF_/CreateColumn",{charid=N})Citizen.Wait(500)local O=json.encode({I,J})API_Database.query("CKF_/SaveTattooData",{target='tattoo',key=H,value=O,charid=N})end end end end;function hpp.getPlayerTattoos()local K=source;local L=APICKF.getUserFromSource(K)if L then local M=L:getCharacter()if M then local N=M.id;local G=API_Database.query("CKF_/GetPlayerTattoos",{charid=N})if#G>0 then return json.decode(G[1].tattoos)else local P={}return P end else return nil end else return nil end end;function hpp.tryPayTattoos()local K=source;local L=APICKF.getUserFromSource(K)if L then local M=L:getCharacter()if M then local N=M.id;return M:getItemAmount("generic_money")end end end;function hpp.clearTattoosInDb()local K=source;local L=APICKF.getUserFromSource(K)if L then local M=L:getCharacter()if M then local N=M.id;API_Database.query("CKF_/ResetTattoos",{charid=N})end end end