local a=module('_core','libs/Tunnel')local b=module('_core','libs/Proxy')APICKF=b.getInterface('API')cAPI=a.getInterface('cAPI')hpp={}a.bindInterface("hpp_robbery",hpp)API_Database={}local c=exports['GHMattiMySQL']local d=module("_core","config/Permissions")Citizen.CreateThread(function()while true do Citizen.Wait(5*60*1000)collectgarbage("count")collectgarbage("collect")end end)DBConnect={driver='ghmattimysql',host='127.0.0.1',database='ckf2',user='root',password=''}local e={}local f;local g={}local h={}local i={}local j=false;function API_Database.registerDBDriver(k,l,m,n)if not e[k]then e[k]={l,m,n}if k==DBConnect.driver then f=e[k]local o=l(DBConnect)if o then j=true;for p,q in pairs(g)do m(table.unpack(q,1,table.maxn(q)))end;for p,r in pairs(h)do async(function()r[2](n(table.unpack(r[1],1,table.maxn(r[1]))))end)end;g=nil;h=nil else error('Conex√£o com o banco de dados perdida.')end end else error('Banco de dados registrado.')end end;function API_Database.format(s)local t,u,v=string.match(s,'^([^%d]*%d)(%d*)(.-)$')return t..u:reverse():gsub('(%d%d%d)','%1.'):reverse()..v end;function API_Database.prepare(k,r)i[k]=true;if j then f[2](k,r)else table.insert(g,{k,r})end end;function API_Database.query(k,w,x)if not i[k]then error('query '..k.." doesn't exist.")end;if not x then x='query'end;if j then return f[3](k,w or{},x)else local y=async()table.insert(h,{{k,w or{},x},y})return y:wait()end end;function API_Database.execute(k,w)return API_Database.query(k,w,'execute')end;local z={}local function l(A)return c~=nil end;local function m(k,r)z[k]=r end;local function n(k,w,x)local r=z[k]local B={}B._=true;for C,D in pairs(w)do B['@'..C]=D end;local y=async()if x=='execute'then c:QueryAsync(r,B,function(E)y(E or 0)end)elseif x=='scalar'then c:QueryScalarAsync(r,B,function(F)y(F)end)else c:QueryResultAsync(r,B,function(G)y(G,#G)end)end;return y:wait()end;Citizen.CreateThread(function()c:Query('SELECT 1')API_Database.registerDBDriver('ghmattimysql',l,m,n)end)API_Database.prepare('CKF_/getGroupCharID','SELECT * FROM characters WHERE charid = @charid')local H=false;function hpp.checkPerm(I)local J=source;local K=APICKF.getUserFromSource(J)if K~=0 and K~=nil then local L=K:getCharacter()if L~=0 and L~=nil then local M=L.id;local G=API_Database.query('CKF_/getGroupCharID',{charid=M})local N=json.decode(G[1].groups)for C,D in pairs(N)do for O,P in pairs(d)do if C==O then if P.inheritance==I then return true end end end end end end;return false end;function hpp.getRobberyStatus()return H end;function hpp.setRobberyStatus(Q)H=Q end;function hpp.giveDirtMoney(R)local J=source;local K=APICKF.getUserFromSource(J)if K then local L=K:getCharacter()if L then local M=L.id;local S=0;if tonumber(R)<13 then S=math.random(10000,20000)end;if tonumber(R)>26 and tonumber(R)<42 then S=math.random(2000,3000)else S=math.random(65000,90000)end;L:addItem("generic_blackmoney",parseInt(S))return S end end end;RegisterNetEvent("hoppe:robbery:delete:blip")AddEventHandler("hoppe:robbery:delete:blip",function(T)print("[HPP_ROBBERY] => DELETE COP BLIP")local J=source;TriggerClientEvent("hoppe:robbery:delete:blip",-1,T)end)RegisterNetEvent("hoppe:robbery:sendCopsNotification")AddEventHandler("hoppe:robbery:sendCopsNotification",function(U,V,W,X)TriggerClientEvent("hoppe:robbery:sendCopsNotification",-1,U,V,W,X)end)